{"version":3,"sources":["webpack:///./src/views/components/vuesax/notifications/Notifications.vue?b99f","webpack:///./src/views/components/vuesax/notifications/NotificationsDefault.vue?ed0f","webpack:///src/views/components/vuesax/notifications/NotificationsDefault.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsDefault.vue?2730","webpack:///./src/views/components/vuesax/notifications/NotificationsDefault.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsPosition.vue?da25","webpack:///src/views/components/vuesax/notifications/NotificationsPosition.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsPosition.vue?990c","webpack:///./src/views/components/vuesax/notifications/NotificationsPosition.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsIcon.vue?bb89","webpack:///src/views/components/vuesax/notifications/NotificationsIcon.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsIcon.vue?4503","webpack:///./src/views/components/vuesax/notifications/NotificationsIcon.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsFixedAndFunctionClick.vue?b3e4","webpack:///src/views/components/vuesax/notifications/NotificationsFixedAndFunctionClick.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsFixedAndFunctionClick.vue?f06c","webpack:///./src/views/components/vuesax/notifications/NotificationsFixedAndFunctionClick.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsTime.vue?cf2f","webpack:///./src/views/components/vuesax/notifications/NotificationsTime.vue","webpack:///src/views/components/vuesax/notifications/Notifications.vue","webpack:///./src/views/components/vuesax/notifications/Notifications.vue?18ca","webpack:///./src/views/components/vuesax/notifications/Notifications.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","staticRenderFns","on","$event","$vs","notify","title","text","color","random","slot","methods","getRandomInt","min","max","Math","floor","component","listPosition","position","randomCenter","data","iconPack","icon","randomIcon","myFunction","fixed","click","time","script","components","NotificationsDefault","NotificationsPosition","NotificationsIcon","NotificationsFixedAndFunctionClick","NotificationsTime"],"mappings":"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","file":"js/chunk-2d208dc0.06ced3fd.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"notifications-demo\"}},[_c('p',{staticClass:\"mb-4\"},[_vm._v(\"Nice, simple, and interactive notifications\")]),_c('notifications-default'),_c('notifications-position'),_c('notifications-icon'),_c('notifications-fixed-and-function-click'),_c('notifications-time')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"Default\",\"code-toggler\":\"\"}},[_c('p',[_vm._v(\" To add a notification we have the global function \"),_c('code',[_vm._v(\"$vs.notify\")]),_vm._v(\". The first parameter is a \"),_c('code',[_vm._v(\"json\")]),_vm._v(\" with all the necessary attributes, or if we only want the standard notification we can only add a string with the text of the notification \")]),_c('div',{staticClass:\"demo-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Primary',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'primary'\n        })}}},[_vm._v(\"Notification Primary\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Success',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'success'\n        })}}},[_vm._v(\"Notification Success\")]),_c('vs-button',{attrs:{\"color\":\"danger\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Danger',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'danger'\n        })}}},[_vm._v(\"Notification Danger\")]),_c('vs-button',{attrs:{\"color\":\"warning\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Warning',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'warning'\n        })}}},[_vm._v(\"Notification Warning\")]),_c('vs-button',{attrs:{\"color\":\"dark\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'dark',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'dark'\n        })}}},[_vm._v(\"Notification Dark\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"gradient\"},on:{\"click\":function($event){return _vm.random()}}},[_vm._v(\"Notification Random Color\")])],1),_c('template',{slot:\"codeContainer\"},[_vm._v(\" <template> <div class=\\\"demo-alignment\\\"> <vs-button @click=\\\"$vs.notify({ title:'Primary', text:'Lorem ipsum dolor sit amet, consectetur', color:'primary'})\\\" color=\\\"primary\\\" type=\\\"flat\\\">Notification Primary</vs-button> <vs-button @click=\\\"$vs.notify({ title:'Success', text:'Lorem ipsum dolor sit amet, consectetur', color:'success'})\\\" color=\\\"success\\\" type=\\\"flat\\\">Notification Success</vs-button> <vs-button @click=\\\"$vs.notify({ title:'Danger', text:'Lorem ipsum dolor sit amet, consectetur', color:'danger'})\\\" color=\\\"danger\\\" type=\\\"flat\\\">Notification Danger</vs-button> <vs-button @click=\\\"$vs.notify({ title:'Warning', text:'Lorem ipsum dolor sit amet, consectetur', color:'warning'})\\\" color=\\\"warning\\\" type=\\\"flat\\\">Notification Warning</vs-button> <vs-button @click=\\\"$vs.notify({ title:'dark', text:'Lorem ipsum dolor sit amet, consectetur', color:'dark'})\\\" color=\\\"dark\\\" type=\\\"flat\\\">Notification Dark</vs-button> <vs-button @click=\\\"random()\\\" color=\\\"success\\\" type=\\\"gradient\\\">Notification Random Color</vs-button> </div> </template> <script> export default { methods: { random() { function getRandomInt(min, max) { return Math.floor(Math.random() * (max - min)) + min; } let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})` this.$vs.notify({ title: 'Color', text: 'Lorem ipsum dolor sit amet, consectetur', color: color }) }, } } </script> \")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <vx-card title=\"Default\" code-toggler>\n    <p>\n      To add a notification we have the global function <code>$vs.notify</code>.\n      The first parameter is a <code>json</code> with all the necessary\n      attributes, or if we only want the standard notification we can only add a\n      string with the text of the notification\n    </p>\n\n    <div class=\"demo-alignment\">\n      <vs-button\n        @click=\"\n          $vs.notify({\n            title: 'Primary',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'primary'\n          })\n        \"\n        color=\"primary\"\n        type=\"flat\"\n        >Notification Primary</vs-button\n      >\n\n      <vs-button\n        @click=\"\n          $vs.notify({\n            title: 'Success',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'success'\n          })\n        \"\n        color=\"success\"\n        type=\"flat\"\n        >Notification Success</vs-button\n      >\n\n      <vs-button\n        @click=\"\n          $vs.notify({\n            title: 'Danger',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'danger'\n          })\n        \"\n        color=\"danger\"\n        type=\"flat\"\n        >Notification Danger</vs-button\n      >\n\n      <vs-button\n        @click=\"\n          $vs.notify({\n            title: 'Warning',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'warning'\n          })\n        \"\n        color=\"warning\"\n        type=\"flat\"\n        >Notification Warning</vs-button\n      >\n\n      <vs-button\n        @click=\"\n          $vs.notify({\n            title: 'dark',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'dark'\n          })\n        \"\n        color=\"dark\"\n        type=\"flat\"\n        >Notification Dark</vs-button\n      >\n\n      <vs-button @click=\"random()\" color=\"success\" type=\"gradient\"\n        >Notification Random Color</vs-button\n      >\n    </div>\n\n    <template slot=\"codeContainer\">\n      &lt;template&gt; &lt;div class=&quot;demo-alignment&quot;&gt;\n      &lt;vs-button @click=&quot;$vs.notify({ title:&apos;Primary&apos;,\n      text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n      color:&apos;primary&apos;})&quot; color=&quot;primary&quot;\n      type=&quot;flat&quot;&gt;Notification Primary&lt;/vs-button&gt;\n      &lt;vs-button @click=&quot;$vs.notify({ title:&apos;Success&apos;,\n      text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n      color:&apos;success&apos;})&quot; color=&quot;success&quot;\n      type=&quot;flat&quot;&gt;Notification Success&lt;/vs-button&gt;\n      &lt;vs-button @click=&quot;$vs.notify({ title:&apos;Danger&apos;,\n      text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n      color:&apos;danger&apos;})&quot; color=&quot;danger&quot;\n      type=&quot;flat&quot;&gt;Notification Danger&lt;/vs-button&gt;\n      &lt;vs-button @click=&quot;$vs.notify({ title:&apos;Warning&apos;,\n      text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n      color:&apos;warning&apos;})&quot; color=&quot;warning&quot;\n      type=&quot;flat&quot;&gt;Notification Warning&lt;/vs-button&gt;\n      &lt;vs-button @click=&quot;$vs.notify({ title:&apos;dark&apos;,\n      text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n      color:&apos;dark&apos;})&quot; color=&quot;dark&quot;\n      type=&quot;flat&quot;&gt;Notification Dark&lt;/vs-button&gt; &lt;vs-button\n      @click=&quot;random()&quot; color=&quot;success&quot;\n      type=&quot;gradient&quot;&gt;Notification Random Color&lt;/vs-button&gt;\n      &lt;/div&gt; &lt;/template&gt; &lt;script&gt; export default { methods: {\n      random() { function getRandomInt(min, max) { return\n      Math.floor(Math.random() * (max - min)) + min; } let color =\n      &grave;rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})&grave;\n      this.$vs.notify({ title: &apos;Color&apos;, text: &apos;Lorem ipsum dolor\n      sit amet, consectetur&apos;, color: color }) }, } } &lt;/script&gt;\n    </template>\n  </vx-card>\n</template>\n\n<script>\nexport default {\n  methods: {\n    random() {\n      function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n      }\n      let color = `rgb(${getRandomInt(0, 255)},${getRandomInt(\n        0,\n        255\n      )},${getRandomInt(0, 255)})`;\n\n      this.$vs.notify({\n        title: \"Color\",\n        text: \"Lorem ipsum dolor sit amet, consectetur\",\n        color: color\n      });\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsDefault.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsDefault.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NotificationsDefault.vue?vue&type=template&id=8c381cde&\"\nimport script from \"./NotificationsDefault.vue?vue&type=script&lang=js&\"\nexport * from \"./NotificationsDefault.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"Position\",\"code-toggler\":\"\"}},[_c('p',[_vm._v(\" We can change the place where the notification appears with the property position. A practical example would be: position: 'top-right'. The supported values are \")]),_c('vx-list',{staticClass:\"mt-3\",attrs:{\"list\":_vm.listPosition}}),_c('vs-alert',{staticClass:\"mb-1\",attrs:{\"icon\":\"warning\",\"active\":\"true\",\"color\":\"warning\"}},[_c('span',[_vm._v(\"The default notifications appear \"),_c('code',[_vm._v(\"bottom-right\")]),_vm._v(\", it is not necessary to add the position property if it is the desired position\")])]),_c('div',{staticClass:\"demo-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Position Default',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'primary'\n        })}}},[_vm._v(\"Position Default\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Position top-right',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'success',\n          position: 'top-right'\n        })}}},[_vm._v(\"Position Top Right\")]),_c('vs-button',{attrs:{\"color\":\"danger\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Position top-left',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'danger',\n          position: 'top-left'\n        })}}},[_vm._v(\"Position Top Left\")]),_c('vs-button',{attrs:{\"color\":\"warning\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Position bottom-left',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'warning',\n          position: 'bottom-left'\n        })}}},[_vm._v(\"Position Bottom Left\")]),_c('vs-button',{attrs:{\"color\":\"dark\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Position bottom-center',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'dark',\n          position: 'bottom-center'\n        })}}},[_vm._v(\" Position Bottom Center\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"gradient\"},on:{\"click\":function($event){return _vm.randomCenter()}}},[_vm._v(\"Position Top Center Random Color\")])],1),_c('template',{slot:\"codeContainer\"},[_vm._v(\" <template> <div class=\\\"demo-alignment\\\"> <vs-button color=\\\"primary\\\" type=\\\"flat\\\" @click=\\\"$vs.notify({ title:'Position Default', text:'Lorem ipsum dolor sit amet, consectetur', color:'primary'})\\\">Position Default</vs-button> <vs-button color=\\\"success\\\" type=\\\"flat\\\" @click=\\\"$vs.notify({ title:'Position top-right', text:'Lorem ipsum dolor sit amet, consectetur', color:'success', position:'top-right'})\\\">Position Top Right</vs-button> <vs-button color=\\\"danger\\\" type=\\\"flat\\\" @click=\\\"$vs.notify({ title:'Position top-left', text:'Lorem ipsum dolor sit amet, consectetur', color:'danger', position:'top-left'})\\\">Position Top Left</vs-button> <vs-button color=\\\"warning\\\" type=\\\"flat\\\" @click=\\\"$vs.notify({ title:'Position bottom-left', text:'Lorem ipsum dolor sit amet, consectetur', color:'warning', position:'bottom-left'})\\\">Position Bottom Left</vs-button> <vs-button color=\\\"dark\\\" type=\\\"flat\\\" @click=\\\"$vs.notify({ title:'Position bottom-center', text:'Lorem ipsum dolor sit amet, consectetur', color:'dark', position:'bottom-center'})\\\"> Position Bottom Center</vs-button> <vs-button @click=\\\"randomCenter()\\\" color=\\\"success\\\" type=\\\"gradient\\\">Position Top Center Random Color</vs-button> </div> </template> <script> export default { methods: { randomCenter() { function getRandomInt(min, max) { return Math.floor(Math.random() * (max - min)) + min; } let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})` this.$vs.notify({ title: 'Position top-center', text: 'Lorem ipsum dolor sit amet, consectetur', color: color, position: 'top-center' }) } } } </script> \")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <vx-card title=\"Position\" code-toggler>\n    <p>\n      We can change the place where the notification appears with the property\n      position. A practical example would be: position: 'top-right'. The\n      supported values are\n    </p>\n\n    <vx-list :list=\"listPosition\" class=\"mt-3\"></vx-list>\n\n    <vs-alert icon=\"warning\" active=\"true\" color=\"warning\" class=\"mb-1\">\n      <span\n        >The default notifications appear <code>bottom-right</code>, it is not\n        necessary to add the position property if it is the desired\n        position</span\n      >\n    </vs-alert>\n\n    <div class=\"demo-alignment\">\n      <vs-button\n        @click=\"\n          $vs.notify({\n            title: 'Position Default',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'primary'\n          })\n        \"\n        color=\"primary\"\n        type=\"flat\"\n        >Position Default</vs-button\n      >\n\n      <vs-button\n        @click=\"\n          $vs.notify({\n            title: 'Position top-right',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'success',\n            position: 'top-right'\n          })\n        \"\n        color=\"success\"\n        type=\"flat\"\n        >Position Top Right</vs-button\n      >\n\n      <vs-button\n        @click=\"\n          $vs.notify({\n            title: 'Position top-left',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'danger',\n            position: 'top-left'\n          })\n        \"\n        color=\"danger\"\n        type=\"flat\"\n        >Position Top Left</vs-button\n      >\n\n      <vs-button\n        @click=\"\n          $vs.notify({\n            title: 'Position bottom-left',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'warning',\n            position: 'bottom-left'\n          })\n        \"\n        color=\"warning\"\n        type=\"flat\"\n        >Position Bottom Left</vs-button\n      >\n\n      <vs-button\n        @click=\"\n          $vs.notify({\n            title: 'Position bottom-center',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'dark',\n            position: 'bottom-center'\n          })\n        \"\n        color=\"dark\"\n        type=\"flat\"\n      >\n        Position Bottom Center</vs-button\n      >\n\n      <vs-button @click=\"randomCenter()\" color=\"success\" type=\"gradient\"\n        >Position Top Center Random Color</vs-button\n      >\n    </div>\n\n    <template slot=\"codeContainer\">\n      &lt;template&gt; &lt;div class=&quot;demo-alignment&quot;&gt;\n      &lt;vs-button color=&quot;primary&quot; type=&quot;flat&quot;\n      @click=&quot;$vs.notify({ title:&apos;Position Default&apos;,\n      text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n      color:&apos;primary&apos;})&quot;&gt;Position Default&lt;/vs-button&gt;\n      &lt;vs-button color=&quot;success&quot; type=&quot;flat&quot;\n      @click=&quot;$vs.notify({ title:&apos;Position top-right&apos;,\n      text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n      color:&apos;success&apos;,\n      position:&apos;top-right&apos;})&quot;&gt;Position Top\n      Right&lt;/vs-button&gt; &lt;vs-button color=&quot;danger&quot;\n      type=&quot;flat&quot; @click=&quot;$vs.notify({ title:&apos;Position\n      top-left&apos;, text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n      color:&apos;danger&apos;,\n      position:&apos;top-left&apos;})&quot;&gt;Position Top\n      Left&lt;/vs-button&gt; &lt;vs-button color=&quot;warning&quot;\n      type=&quot;flat&quot; @click=&quot;$vs.notify({ title:&apos;Position\n      bottom-left&apos;, text:&apos;Lorem ipsum dolor sit amet,\n      consectetur&apos;, color:&apos;warning&apos;,\n      position:&apos;bottom-left&apos;})&quot;&gt;Position Bottom\n      Left&lt;/vs-button&gt; &lt;vs-button color=&quot;dark&quot;\n      type=&quot;flat&quot; @click=&quot;$vs.notify({ title:&apos;Position\n      bottom-center&apos;, text:&apos;Lorem ipsum dolor sit amet,\n      consectetur&apos;, color:&apos;dark&apos;,\n      position:&apos;bottom-center&apos;})&quot;&gt; Position Bottom\n      Center&lt;/vs-button&gt; &lt;vs-button @click=&quot;randomCenter()&quot;\n      color=&quot;success&quot; type=&quot;gradient&quot;&gt;Position Top Center\n      Random Color&lt;/vs-button&gt; &lt;/div&gt; &lt;/template&gt;\n      &lt;script&gt; export default { methods: { randomCenter() { function\n      getRandomInt(min, max) { return Math.floor(Math.random() * (max - min)) +\n      min; } let color =\n      &grave;rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})&grave;\n      this.$vs.notify({ title: &apos;Position top-center&apos;, text:\n      &apos;Lorem ipsum dolor sit amet, consectetur&apos;, color: color,\n      position: &apos;top-center&apos; }) } } } &lt;/script&gt;\n    </template>\n  </vx-card>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      listPosition: [\n        \"top-right\",\n        \"top-left\",\n        \"top-center\",\n        \"bottom-right\",\n        \"bottom-left\"\n      ]\n    };\n  },\n  methods: {\n    randomCenter() {\n      function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n      }\n      let color = `rgb(${getRandomInt(0, 255)},${getRandomInt(\n        0,\n        255\n      )},${getRandomInt(0, 255)})`;\n      this.$vs.notify({\n        title: \"Position top-center\",\n        text: \"Lorem ipsum dolor sit amet, consectetur\",\n        color: color,\n        position: \"top-center\"\n      });\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsPosition.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsPosition.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NotificationsPosition.vue?vue&type=template&id=4ef6258d&\"\nimport script from \"./NotificationsPosition.vue?vue&type=script&lang=js&\"\nexport * from \"./NotificationsPosition.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"Icon\",\"code-toggler\":\"\"}},[_c('p',[_vm._v(\" Notifications can include icons to improve the user experience and to construct a more pleasant and intuitive notification. To make this, use the \"),_c('code',[_vm._v(\"icon\")]),_vm._v(\" property. A practical example would be: \"),_c('code',[_vm._v(\"icon: 'chat'\")])]),_c('vs-alert',{staticClass:\"mt-5\",attrs:{\"color\":\"primary\",\"icon\":\"new_releases\",\"active\":\"true\"}},[_c('p',[_vm._v(\" Vuesax uses the Google Material Icons font library by default. For a list of all available icons, visit the official \"),_c('a',{attrs:{\"href\":\"https://material.io/icons/\",\"target\":\"_blank\"}},[_vm._v(\"Material Icons page\")]),_vm._v(\". \")]),_c('p',[_vm._v(\" FontAwesome and other fonts library are supported. Simply use the icon-pack with fa or fas. You still need to include the Font Awesome icons in your project. \")])]),_c('div',{staticClass:\"demo-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Icon mail',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-mail'\n        })}}},[_vm._v(\"Icon Mail\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Icon mail',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        })}}},[_vm._v(\"Icon check_box\")]),_c('vs-button',{attrs:{\"color\":\"danger\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Icon mail',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'danger',\n          iconPack: 'feather',\n          icon: 'icon-heart'\n        })}}},[_vm._v(\"Icon favorite\")]),_c('vs-button',{attrs:{\"color\":\"warning\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Icon mail',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle'\n        })}}},[_vm._v(\"Icon error\")]),_c('vs-button',{attrs:{\"color\":\"dark\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Icon mail',\n          text: 'Lorem ipsum dolor sit amet, consectetur',\n          color: 'dark',\n          iconPack: 'feather',\n          icon: 'icon-message-square'\n        })}}},[_vm._v(\"Icon chat\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"gradient\"},on:{\"click\":function($event){return _vm.randomIcon()}}},[_vm._v(\"Icon Random Color\")])],1),_c('template',{slot:\"codeContainer\"},[_vm._v(\" <template> <div class=\\\"demo-alignment\\\"> <vs-button color=\\\"primary\\\" type=\\\"flat\\\" @click=\\\"$vs.notify({ title:'Icon mail', text:'Lorem ipsum dolor sit amet, consectetur', color:'primary', iconPack: 'feather', icon:'icon-mail'})\\\">Icon Mail</vs-button> <vs-button color=\\\"success\\\" type=\\\"flat\\\" @click=\\\"$vs.notify({ title:'Icon mail', text:'Lorem ipsum dolor sit amet, consectetur', color:'success', iconPack: 'feather', icon:'icon-check'})\\\">Icon check_box</vs-button> <vs-button color=\\\"danger\\\" type=\\\"flat\\\" @click=\\\"$vs.notify({ title:'Icon mail', text:'Lorem ipsum dolor sit amet, consectetur', color:'danger', iconPack: 'feather', icon:'icon-heart'})\\\">Icon favorite</vs-button> <vs-button color=\\\"warning\\\" type=\\\"flat\\\" @click=\\\"$vs.notify({ title:'Icon mail', text:'Lorem ipsum dolor sit amet, consectetur', color:'warning', iconPack: 'feather', icon:'icon-alert-circle'})\\\">Icon error</vs-button> <vs-button color=\\\"dark\\\" type=\\\"flat\\\" @click=\\\"$vs.notify({ title:'Icon mail', text:'Lorem ipsum dolor sit amet, consectetur', color:'dark', iconPack: 'feather', icon:'icon-message-square'})\\\">Icon chat</vs-button> <vs-button @click=\\\"randomIcon()\\\" color=\\\"success\\\" type=\\\"gradient\\\">Icon Random Color</vs-button> </div> </template> <script> export default { methods: { randomIcon() { function getRandomInt(min, max) { return Math.floor(Math.random() * (max - min)) + min; } let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})` this.$vs.notify({ title: &apos;Icon mail&apos;, text: &apos;Lorem ipsum dolor sit amet, consectetur&apos;, color: color, icon: &apos;verified_user&apos; }) } } } </script> \")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <vx-card title=\"Icon\" code-toggler>\n    <p>\n      Notifications can include icons to improve the user experience and to\n      construct a more pleasant and intuitive notification. To make this, use\n      the <code>icon</code> property. A practical example would be:\n      <code>icon: 'chat'</code>\n    </p>\n\n    <vs-alert color=\"primary\" icon=\"new_releases\" active=\"true\" class=\"mt-5\">\n      <p>\n        Vuesax uses the Google Material Icons font library by default. For a\n        list of all available icons, visit the official\n        <a href=\"https://material.io/icons/\" target=\"_blank\"\n          >Material Icons page</a\n        >.\n      </p>\n      <p>\n        FontAwesome and other fonts library are supported. Simply use the\n        icon-pack with fa or fas. You still need to include the Font Awesome\n        icons in your project.\n      </p>\n    </vs-alert>\n\n    <div class=\"demo-alignment\">\n      <vs-button\n        color=\"primary\"\n        type=\"flat\"\n        @click=\"\n          $vs.notify({\n            title: 'Icon mail',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'primary',\n            iconPack: 'feather',\n            icon: 'icon-mail'\n          })\n        \"\n        >Icon Mail</vs-button\n      >\n\n      <vs-button\n        color=\"success\"\n        type=\"flat\"\n        @click=\"\n          $vs.notify({\n            title: 'Icon mail',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          })\n        \"\n        >Icon check_box</vs-button\n      >\n\n      <vs-button\n        color=\"danger\"\n        type=\"flat\"\n        @click=\"\n          $vs.notify({\n            title: 'Icon mail',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-heart'\n          })\n        \"\n        >Icon favorite</vs-button\n      >\n\n      <vs-button\n        color=\"warning\"\n        type=\"flat\"\n        @click=\"\n          $vs.notify({\n            title: 'Icon mail',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-alert-circle'\n          })\n        \"\n        >Icon error</vs-button\n      >\n\n      <vs-button\n        color=\"dark\"\n        type=\"flat\"\n        @click=\"\n          $vs.notify({\n            title: 'Icon mail',\n            text: 'Lorem ipsum dolor sit amet, consectetur',\n            color: 'dark',\n            iconPack: 'feather',\n            icon: 'icon-message-square'\n          })\n        \"\n        >Icon chat</vs-button\n      >\n\n      <vs-button @click=\"randomIcon()\" color=\"success\" type=\"gradient\"\n        >Icon Random Color</vs-button\n      >\n    </div>\n\n    <template slot=\"codeContainer\">\n      &lt;template&gt; &lt;div class=&quot;demo-alignment&quot;&gt;\n      &lt;vs-button color=&quot;primary&quot; type=&quot;flat&quot;\n      @click=&quot;$vs.notify({ title:&apos;Icon mail&apos;, text:&apos;Lorem\n      ipsum dolor sit amet, consectetur&apos;, color:&apos;primary&apos;,\n      iconPack: &apos;feather&apos;, icon:&apos;icon-mail&apos;})&quot;&gt;Icon\n      Mail&lt;/vs-button&gt; &lt;vs-button color=&quot;success&quot;\n      type=&quot;flat&quot; @click=&quot;$vs.notify({ title:&apos;Icon\n      mail&apos;, text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n      color:&apos;success&apos;, iconPack: &apos;feather&apos;,\n      icon:&apos;icon-check&apos;})&quot;&gt;Icon check_box&lt;/vs-button&gt;\n      &lt;vs-button color=&quot;danger&quot; type=&quot;flat&quot;\n      @click=&quot;$vs.notify({ title:&apos;Icon mail&apos;, text:&apos;Lorem\n      ipsum dolor sit amet, consectetur&apos;, color:&apos;danger&apos;,\n      iconPack: &apos;feather&apos;, icon:&apos;icon-heart&apos;})&quot;&gt;Icon\n      favorite&lt;/vs-button&gt; &lt;vs-button color=&quot;warning&quot;\n      type=&quot;flat&quot; @click=&quot;$vs.notify({ title:&apos;Icon\n      mail&apos;, text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n      color:&apos;warning&apos;, iconPack: &apos;feather&apos;,\n      icon:&apos;icon-alert-circle&apos;})&quot;&gt;Icon error&lt;/vs-button&gt;\n      &lt;vs-button color=&quot;dark&quot; type=&quot;flat&quot;\n      @click=&quot;$vs.notify({ title:&apos;Icon mail&apos;, text:&apos;Lorem\n      ipsum dolor sit amet, consectetur&apos;, color:&apos;dark&apos;, iconPack:\n      &apos;feather&apos;, icon:&apos;icon-message-square&apos;})&quot;&gt;Icon\n      chat&lt;/vs-button&gt; &lt;vs-button @click=&quot;randomIcon()&quot;\n      color=&quot;success&quot; type=&quot;gradient&quot;&gt;Icon Random\n      Color&lt;/vs-button&gt; &lt;/div&gt; &lt;/template&gt; &lt;script&gt;\n      export default { methods: { randomIcon() { function getRandomInt(min, max)\n      { return Math.floor(Math.random() * (max - min)) + min; } let color =\n      &grave;rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})&grave;\n      this.$vs.notify({ title: &amp;apos;Icon mail&amp;apos;, text:\n      &amp;apos;Lorem ipsum dolor sit amet, consectetur&amp;apos;, color: color,\n      icon: &amp;apos;verified_user&amp;apos; }) } } } &lt;/script&gt;\n    </template>\n  </vx-card>\n</template>\n\n<script>\nexport default {\n  methods: {\n    randomIcon() {\n      function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n      }\n      let color = `rgb(${getRandomInt(0, 255)},${getRandomInt(\n        0,\n        255\n      )},${getRandomInt(0, 255)})`;\n\n      this.$vs.notify({\n        title: \"Icon Award\",\n        text: \"Lorem ipsum dolor sit amet, consectetur\",\n        color: color,\n        icon: \"icon-award\",\n        iconPack: \"feather\"\n      });\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsIcon.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsIcon.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NotificationsIcon.vue?vue&type=template&id=67653e12&\"\nimport script from \"./NotificationsIcon.vue?vue&type=script&lang=js&\"\nexport * from \"./NotificationsIcon.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"Fixed and function click\",\"code-toggler\":\"\"}},[_c('p',[_vm._v(\" Sometimes we need to execute a function when the user clicks on the notification. For this, pass a function to the click property. Example: \"),_c('code',[_vm._v(\"click:()=>{ ... }\")])]),_c('vs-button',{staticClass:\"mt-4\",attrs:{\"type\":\"gradient\",\"color\":\"success\"},on:{\"click\":function($event){return _vm.myFunction()}}},[_vm._v(\"Run Example\")]),_c('template',{slot:\"codeContainer\"},[_vm._v(\" <template> <vs-button @click=\\\"myFunction()\\\" type=\\\"gradient\\\" color=\\\"success\\\" class=\\\"my-4\\\">Run Example</vs-button> </template> <script> export default { methods: { myFunction() { this.$vs.notify({ title: 'Function click', text: 'Click on me to execute function', color: 'primary', fixed: true, click: () => { // Secondary function this.$vs.notify({ title: 'Secondary function', text: 'Executed the function when clicking', color: 'success', iconPack: 'feather', icon: 'icon-check' }) }, }) }, } } </script> \")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <vx-card title=\"Fixed and function click\" code-toggler>\n    <p>\n      Sometimes we need to execute a function when the user clicks on the\n      notification. For this, pass a function to the click property. Example:\n      <code>click:()=>{ ... }</code>\n    </p>\n\n    <vs-button\n      @click=\"myFunction()\"\n      type=\"gradient\"\n      color=\"success\"\n      class=\"mt-4\"\n      >Run Example</vs-button\n    >\n\n    <template slot=\"codeContainer\">\n      &lt;template&gt; &lt;vs-button @click=&quot;myFunction()&quot;\n      type=&quot;gradient&quot; color=&quot;success&quot;\n      class=&quot;my-4&quot;&gt;Run Example&lt;/vs-button&gt; &lt;/template&gt;\n      &lt;script&gt; export default { methods: { myFunction() {\n      this.$vs.notify({ title: &apos;Function click&apos;, text: &apos;Click on\n      me to execute function&apos;, color: &apos;primary&apos;, fixed: true,\n      click: () =&gt; { // Secondary function this.$vs.notify({ title:\n      &apos;Secondary function&apos;, text: &apos;Executed the function when\n      clicking&apos;, color: &apos;success&apos;, iconPack: &apos;feather&apos;,\n      icon: &apos;icon-check&apos; }) }, }) }, } } &lt;/script&gt;\n    </template>\n  </vx-card>\n</template>\n\n<script>\nexport default {\n  methods: {\n    myFunction() {\n      this.$vs.notify({\n        title: \"Function click\",\n        text: \"Click on me to execute function\",\n        color: \"primary\",\n        fixed: true,\n        click: () => {\n          // Secondary function\n          this.$vs.notify({\n            title: \"Secondary function\",\n            text: \"Executed the function when clicking\",\n            color: \"success\",\n            iconPack: \"feather\",\n            icon: \"icon-check\"\n          });\n        }\n      });\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsFixedAndFunctionClick.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsFixedAndFunctionClick.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NotificationsFixedAndFunctionClick.vue?vue&type=template&id=39d634a8&\"\nimport script from \"./NotificationsFixedAndFunctionClick.vue?vue&type=script&lang=js&\"\nexport * from \"./NotificationsFixedAndFunctionClick.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"Time\",\"code-toggler\":\"\"}},[_c('p',[_vm._v(\" You can change the total time that the notification stays on the screen with the \"),_c('code',[_vm._v(\"time\")]),_vm._v(\" property. Example: \"),_c('code',[_vm._v(\"time: 4000\")])]),_c('vs-alert',{staticClass:\"mt-5\",attrs:{\"color\":\"primary\",\"icon\":\"new_releases\",\"active\":\"true\"}},[_c('p',[_vm._v(\" By default the notifications have a time of \"),_c('strong',[_vm._v(\"2000\")]),_vm._v(\" (2s) \")])]),_c('div',{staticClass:\"demo-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title: 'Time default',\n          text: 'Lorem ipsum dolor sit amet consectetur',\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-clock'\n        })}}},[_vm._v(\"Time default\")]),_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){_vm.$vs.notify({\n          time: 4000,\n          title: 'Time 4s (4000)',\n          text: 'Lorem ipsum dolor sit amet consectetur',\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-clock'\n        })}}},[_vm._v(\"Time 4s (4000)\")]),_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){_vm.$vs.notify({\n          time: 8000,\n          title: 'Time 8s (8000)',\n          text: 'Lorem ipsum dolor sit amet consectetur',\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-clock'\n        })}}},[_vm._v(\"Time 8s (8000)\")])],1),_c('template',{slot:\"codeContainer\"},[_vm._v(\" <template> <div class=\\\"demo-alignment\\\"> <vs-button @click=\\\"$vs.notify({ title:'Time default', text:'Lorem ipsum dolor sit amet consectetur', color:'primary', iconPack: 'feather', icon: 'icon-clock' })\\\" color=\\\"primary\\\" type=\\\"flat\\\">Time default</vs-button> <vs-button @click=\\\"$vs.notify({ time:4000, title:'Time 4s (4000)', text:'Lorem ipsum dolor sit amet consectetur', color:'primary', iconPack: 'feather', icon: 'icon-clock' })\\\" color=\\\"primary\\\" type=\\\"flat\\\">Time 4s (4000)</vs-button> <vs-button @click=\\\"$vs.notify({ time:8000, title:'Time 8s (8000)', text:'Lorem ipsum dolor sit amet consectetur', color:'primary', iconPack: 'feather', icon: 'icon-clock' })\\\" color=\\\"primary\\\" type=\\\"flat\\\">Time 8s (8000)</vs-button> </div> </template> \")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./NotificationsTime.vue?vue&type=template&id=72144e55&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"notifications-demo\">\n    <p class=\"mb-4\">Nice, simple, and interactive notifications</p>\n\n    <notifications-default></notifications-default>\n    <notifications-position></notifications-position>\n    <notifications-icon></notifications-icon>\n    <notifications-fixed-and-function-click></notifications-fixed-and-function-click>\n    <notifications-time></notifications-time>\n  </div>\n</template>\n\n<script>\nimport NotificationsDefault from \"./NotificationsDefault.vue\";\nimport NotificationsPosition from \"./NotificationsPosition.vue\";\nimport NotificationsIcon from \"./NotificationsIcon.vue\";\nimport NotificationsFixedAndFunctionClick from \"./NotificationsFixedAndFunctionClick.vue\";\nimport NotificationsTime from \"./NotificationsTime.vue\";\n\nexport default {\n  components: {\n    NotificationsDefault,\n    NotificationsPosition,\n    NotificationsIcon,\n    NotificationsFixedAndFunctionClick,\n    NotificationsTime\n  }\n};\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notifications.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notifications.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Notifications.vue?vue&type=template&id=b4731482&\"\nimport script from \"./Notifications.vue?vue&type=script&lang=js&\"\nexport * from \"./Notifications.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}